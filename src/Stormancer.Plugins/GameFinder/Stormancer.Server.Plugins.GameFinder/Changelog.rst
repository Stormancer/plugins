=========
Changelog
=========

All notable changes to this project will be documented in this file.

The format is based on `Keep a Changelog <https://keepachangelog.com/en/1.0.0/>`_, except reStructuredText is used instead of Markdown.
Please use only reStructuredText in this file, no Markdown!

This project adheres to semantic versioning.

7.3.0
-----
Changed
*******
- FindGame returns false and an error message on failure
Added
*****
- Added LeaderPartyIsHost parameter to party gamefinder.
- Added "gamefinder" "end" analytics event.

7.2.1.1
-------
Fixed
*****
- Fixed issue that prevented the quickqueue gamefinder from creating a team in an already existing gamesession.

7.2.1
-----
Added
*****
- Added support in quick queue to join existing games if 'allowJoinExistingGame' is true in the gamefinder quickqueue config.

7.1.0.3
-------
Fixed
*****
- Fix code generator configuration to search GameFinder scene with the proper service type (gamefinder and not gamesession).
- Add AreCompatible event handlers

7.0.0
-----
Added
*****
- Added party gamefinder
Changed
*******
- Added capability to join existing GameSessions by adding an 'ExistingGame' instance to GameResult. To creat a new gamesession, add a 'NewGame' object instead.


6.1.0.13
----------
Fixed
*****
- Fix a crash on matchmaking when restarting a QuickQueue matchmaker after shutdown for inactivity.
Added
*****
- Added GameFinderProxy.OpenGameSession method to tell a gamefinder that a gamesession needs more players.
Changed
*******
- Update Users dependency to 5.x.
- Correctly broadcast cancellation to all players in party.
- Use Stormancer.Abstractions.Server 5.0.0

6.0.0.3
-------
Changed
*******
- Use new S2S request protocol

6.0.0
-----
Changed
*******
- Use Stormancer.Abstraction.Server 4.2.0.
Added
*****
- Exposes autogenerated proxy class GameFinderProxy for Scene to scene APIs.
Removed
*******
- Removed manually generated proxy class.

5.0.0.6
-------
Added
*****
- Added AddGameFinder extension method to create a gamefinder scene from a gamefinder configuration
- Add parametrized quick queue implementations (static & dynamic party parameters)
- Add support for canPlayTogether filters in the quick queue implementation.
- Add support for setting a custom gamefinder party parameters factory function for the quick queue implementation. 

Changed
*******
- Change AddGameFinder extension method to ConfigureGameFinder because it doesn't actually creates the gamefinder scene, just the template.
- Correctly dispose packet in S2S RPC

4.0.2
-----
Changed
*******
- Use Stormancer.Abstraction.Server 6.1.0

4.0.1.1
-------
Changed
*******
- Create GameFinderService dependency at the scene level to prevent it from being instantiated in all scenes by IConfigurationChangedEventHandler notifications.

4.0.0.2
-------
Changed
*******
- Update to .NET5.0

3.0.0.16
--------
Added
*****
- Added QuickQueue gamefinder algorithm with configuration extension methods.
- Open Game Sessions feature: Allows opening existing game sessions to new players on the GameFinder.
- Easier gamefinder configuration.
- Advertise party and party member settings in game finder algorithm
- Add AddGameFinder extension method to IHost to easily add & configure gamefinders in an application.

Changed
*******
- Renamed IGameFinder into IGameFinderAlgorithm
- Renamed GameFinderContext.WaitingClient into GameFinderContext.WaitingParties
- Automatic increment of party passes (PastPasses)

Removed
*******
- Removed IDataExtractor from pipeline
- Removed support for direct game search request from client. All gamesearch request should now be done through a party.
